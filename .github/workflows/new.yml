name: Create LCS Definition
run-name: Deploy ${{ github.ref_name }} to ${{ inputs.deployment_target }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: 'Deployment target'
        required: true
        default: 'demo'
        type: choice
        options:
          - demo

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 15
    environment:
      name: ${{ inputs.deployment_target }}
    env:
      APP_NAME: awesome
      LCS_SERVICE: awesome-${{ inputs.deployment_target }}
      LCS_CONTAINER: awesome-wp
      AWS_REGION: ap-southeast-1
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create valid tag name
        id: create-tag-name
        run: |
          TAG_NAME="${GITHUB_REF_NAME//\//-}"    
          TAG_NAME="${TAG_NAME//_/-}"
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Set Environment Variables
        run: |
          IMAGE_TAG="${{ steps.create-tag-name.outputs.tag_name }}-${{ github.run_number }}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"
          ENVIRONMENT_UPPER=$(echo "${{ inputs.deployment_target }}" | tr '[:lower:]' '[:upper:]')
          echo "ENVIRONMENT=$ENVIRONMENT_UPPER" >> "$GITHUB_ENV"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: lightsail/lcs
        run: terraform init

      - name: Terraform Plan
        working-directory: lightsail/lcs
        run: |
          terraform plan \
            -var="lcs_service_name=${{ env.LCS_SERVICE }}" \
            -var="lcs_container_name=${{ env.LCS_CONTAINER }}" \
            -var="env=${{ inputs.deployment_target }}" \
            -out=tfplan

      - name: Terraform Apply
        working-directory: lightsail/lcs
        run: terraform apply -auto-approve tfplan

      - name: Show Outputs
        working-directory: lightsail/lcs
        run: terraform output -json
